//----------------------------------------------------------------------
// This file was automatically generated by the RemObjects SDK from a
// RODL file associated with this project.
//
// Do not modify this file manually, or your changes will be lost when
// it is regenerated the next time you update your RODL.
//----------------------------------------------------------------------

namespace Beta;

interface

uses
  Foundation,
  RemObjectsSDK;

type
  PushProvider_Defines = public class
    const TargetNamespace: NSString = "PushProvider";
    const IApplePushProviderService_IID: NSString = "{E066DCE2-1A6F-408B-8F14-873E53A1B824}";
    const IGooglePushProviderService_IID: NSString = "{33BC7B12-E712-4052-A5DE-FFF96DAEE687}";
  end;

{$REGION ApplePushProviderService}

type
  IApplePushProviderService = public interface
    method registerDevice(
      deviceToken: NSData;
      additionalInfo: String
    );
    method unregisterDevice(
      deviceToken: NSData
    );
  end;

type
  ApplePushProviderService_Proxy = public class(ROProxy, IApplePushProviderService)
  public
    method initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic; override;
    method __getInterfaceName: NSString; override;
    method registerDevice(
      deviceToken: NSData;
      additionalInfo: String
    );
    method unregisterDevice(
      deviceToken: NSData
    );
  end;

type
  ApplePushProviderService_AsyncProxy = public class(ROAsyncProxy)
  public
    method initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic; override;
    method __getInterfaceName: NSString; override;
    {$REGION Async registerDevice}
    method beginRegisterDevice(
      deviceToken: NSData;
      additionalInfo: String
    ): ROAsyncRequest;
    method beginRegisterDevice(
      deviceToken: NSData;
      additionalInfo: String
    ) start(___start: Boolean): ROAsyncRequest;
    method beginRegisterDevice(
      deviceToken: NSData;
      additionalInfo: String
    ) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
    method endRegisterDevice(
      __asyncRequest: ROAsyncRequest);
    {$ENDREGION}
    {$REGION Async unregisterDevice}
    method beginUnregisterDevice(
      deviceToken: NSData
    ): ROAsyncRequest;
    method beginUnregisterDevice(
      deviceToken: NSData
    ) start(___start: Boolean): ROAsyncRequest;
    method beginUnregisterDevice(
      deviceToken: NSData
    ) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
    method endUnregisterDevice(
      __asyncRequest: ROAsyncRequest);
    {$ENDREGION}
  end;

{$ENDREGION}

{$REGION GooglePushProviderService}

type
  IGooglePushProviderService = public interface
    method registerDevice(
      registrationId: String;
      additionalInfo: String
    );
    method unregisterDevice(
      registrationId: String
    );
  end;

type
  GooglePushProviderService_Proxy = public class(ROProxy, IGooglePushProviderService)
  public
    method initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic; override;
    method __getInterfaceName: NSString; override;
    method registerDevice(
      registrationId: String;
      additionalInfo: String
    );
    method unregisterDevice(
      registrationId: String
    );
  end;

type
  GooglePushProviderService_AsyncProxy = public class(ROAsyncProxy)
  public
    method initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic; override;
    method __getInterfaceName: NSString; override;
    {$REGION Async registerDevice}
    method beginRegisterDevice(
      registrationId: String;
      additionalInfo: String
    ): ROAsyncRequest;
    method beginRegisterDevice(
      registrationId: String;
      additionalInfo: String
    ) start(___start: Boolean): ROAsyncRequest;
    method beginRegisterDevice(
      registrationId: String;
      additionalInfo: String
    ) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
    method endRegisterDevice(
      __asyncRequest: ROAsyncRequest);
    {$ENDREGION}
    {$REGION Async unregisterDevice}
    method beginUnregisterDevice(
      registrationId: String
    ): ROAsyncRequest;
    method beginUnregisterDevice(
      registrationId: String
    ) start(___start: Boolean): ROAsyncRequest;
    method beginUnregisterDevice(
      registrationId: String
    ) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
    method endUnregisterDevice(
      __asyncRequest: ROAsyncRequest);
    {$ENDREGION}
  end;

{$ENDREGION}

implementation

{$REGION ApplePushProviderService_Proxy}

method ApplePushProviderService_Proxy.initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic;
begin
  exit inherited initWithMessage(aMessage) channel(aChannel);
end;

method ApplePushProviderService_Proxy.__getInterfaceName: NSString;
begin
  exit "ApplePushProviderService";
end;

method ApplePushProviderService_Proxy.registerDevice(
  deviceToken: NSData;
  additionalInfo: String
);
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  try
    __localMessage.writeBinary(deviceToken) withName("deviceToken");
    __localMessage.writeUtf8String(additionalInfo) withName("additionalInfo");
    __localMessage.finalizeMessage;
    self.__clientChannel.dispatch(__localMessage);
  finally
    locking self.__message do begin
      self.__message.setClientID(__localMessage.clientID);
    end;
  end;
end;

method ApplePushProviderService_Proxy.unregisterDevice(
  deviceToken: NSData
);
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  try
    __localMessage.writeBinary(deviceToken) withName("deviceToken");
    __localMessage.finalizeMessage;
    self.__clientChannel.dispatch(__localMessage);
  finally
    locking self.__message do begin
      self.__message.setClientID(__localMessage.clientID);
    end;
  end;
end;

{$ENDREGION}

{$REGION ApplePushProviderService_AsyncProxy}

method ApplePushProviderService_AsyncProxy.initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic;
begin
  exit inherited initWithMessage(aMessage) channel(aChannel);
end;

method ApplePushProviderService_AsyncProxy.__getInterfaceName: NSString;
begin
  exit "ApplePushProviderService";
end;

method ApplePushProviderService_AsyncProxy.beginRegisterDevice(
  deviceToken: NSData;
  additionalInfo: String
): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  __localMessage.writeBinary(deviceToken) withName("deviceToken");
  __localMessage.writeUtf8String(additionalInfo) withName("additionalInfo");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(true);
end;

method ApplePushProviderService_AsyncProxy.beginUnregisterDevice(
  deviceToken: NSData
): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  __localMessage.writeBinary(deviceToken) withName("deviceToken");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(true);
end;

method ApplePushProviderService_AsyncProxy.beginRegisterDevice(
  deviceToken: NSData;
  additionalInfo: String
) start(___start: Boolean): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  __localMessage.writeBinary(deviceToken) withName("deviceToken");
  __localMessage.writeUtf8String(additionalInfo) withName("additionalInfo");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(___start);
end;

method ApplePushProviderService_AsyncProxy.beginUnregisterDevice(
  deviceToken: NSData
) start(___start: Boolean): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  __localMessage.writeBinary(deviceToken) withName("deviceToken");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(___start);
end;

method ApplePushProviderService_AsyncProxy.beginRegisterDevice(
  deviceToken: NSData;
  additionalInfo: String
) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  __localMessage.writeBinary(deviceToken) withName("deviceToken");
  __localMessage.writeUtf8String(additionalInfo) withName("additionalInfo");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) startWithBlock(___block);
end;

method ApplePushProviderService_AsyncProxy.beginUnregisterDevice(
  deviceToken: NSData
) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  __localMessage.writeBinary(deviceToken) withName("deviceToken");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) startWithBlock(___block);
end;

method ApplePushProviderService_AsyncProxy.endRegisterDevice(
  __asyncRequest: ROAsyncRequest);
begin
  var __localMessage: ROMessage := __asyncRequest.responseMessage;
  locking self.__message do begin
    self.__message.setClientID(__localMessage.clientID);
  end;
end;

method ApplePushProviderService_AsyncProxy.endUnregisterDevice(
  __asyncRequest: ROAsyncRequest);
begin
  var __localMessage: ROMessage := __asyncRequest.responseMessage;
  locking self.__message do begin
    self.__message.setClientID(__localMessage.clientID);
  end;
end;

{$ENDREGION}

{$REGION GooglePushProviderService_Proxy}

method GooglePushProviderService_Proxy.initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic;
begin
  exit inherited initWithMessage(aMessage) channel(aChannel);
end;

method GooglePushProviderService_Proxy.__getInterfaceName: NSString;
begin
  exit "GooglePushProviderService";
end;

method GooglePushProviderService_Proxy.registerDevice(
  registrationId: String;
  additionalInfo: String
);
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  try
    __localMessage.writeAnsiString(registrationId) withName("registrationId");
    __localMessage.writeAnsiString(additionalInfo) withName("additionalInfo");
    __localMessage.finalizeMessage;
    self.__clientChannel.dispatch(__localMessage);
  finally
    locking self.__message do begin
      self.__message.setClientID(__localMessage.clientID);
    end;
  end;
end;

method GooglePushProviderService_Proxy.unregisterDevice(
  registrationId: String
);
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  try
    __localMessage.writeAnsiString(registrationId) withName("registrationId");
    __localMessage.finalizeMessage;
    self.__clientChannel.dispatch(__localMessage);
  finally
    locking self.__message do begin
      self.__message.setClientID(__localMessage.clientID);
    end;
  end;
end;

{$ENDREGION}

{$REGION GooglePushProviderService_AsyncProxy}

method GooglePushProviderService_AsyncProxy.initWithMessage(aMessage: ROMessage) channel(aChannel: ROClientChannel): dynamic;
begin
  exit inherited initWithMessage(aMessage) channel(aChannel);
end;

method GooglePushProviderService_AsyncProxy.__getInterfaceName: NSString;
begin
  exit "GooglePushProviderService";
end;

method GooglePushProviderService_AsyncProxy.beginRegisterDevice(
  registrationId: String;
  additionalInfo: String
): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  __localMessage.writeAnsiString(registrationId) withName("registrationId");
  __localMessage.writeAnsiString(additionalInfo) withName("additionalInfo");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(true);
end;

method GooglePushProviderService_AsyncProxy.beginUnregisterDevice(
  registrationId: String
): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  __localMessage.writeAnsiString(registrationId) withName("registrationId");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(true);
end;

method GooglePushProviderService_AsyncProxy.beginRegisterDevice(
  registrationId: String;
  additionalInfo: String
) start(___start: Boolean): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  __localMessage.writeAnsiString(registrationId) withName("registrationId");
  __localMessage.writeAnsiString(additionalInfo) withName("additionalInfo");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(___start);
end;

method GooglePushProviderService_AsyncProxy.beginUnregisterDevice(
  registrationId: String
) start(___start: Boolean): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  __localMessage.writeAnsiString(registrationId) withName("registrationId");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) start(___start);
end;

method GooglePushProviderService_AsyncProxy.beginRegisterDevice(
  registrationId: String;
  additionalInfo: String
) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("registerDevice");
  __localMessage.writeAnsiString(registrationId) withName("registrationId");
  __localMessage.writeAnsiString(additionalInfo) withName("additionalInfo");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) startWithBlock(___block);
end;

method GooglePushProviderService_AsyncProxy.beginUnregisterDevice(
  registrationId: String
) startWithBlock(___block: block(arg: ROAsyncRequest)): ROAsyncRequest;
begin
  var __localMessage: ROMessage := self.__message.copy;
  __localMessage.initializeAsRequestMessage(self.__clientChannel)
                 libraryName("PushProvider")
                 interfaceName(self.__getActiveInterfaceName)
                 messageName("unregisterDevice");
  __localMessage.writeAnsiString(registrationId) withName("registrationId");
  __localMessage.finalizeMessage;
  exit self.__clientChannel.asyncDispatch(__localMessage) withProxy(self) startWithBlock(___block);
end;

method GooglePushProviderService_AsyncProxy.endRegisterDevice(
  __asyncRequest: ROAsyncRequest);
begin
  var __localMessage: ROMessage := __asyncRequest.responseMessage;
  locking self.__message do begin
    self.__message.setClientID(__localMessage.clientID);
  end;
end;

method GooglePushProviderService_AsyncProxy.endUnregisterDevice(
  __asyncRequest: ROAsyncRequest);
begin
  var __localMessage: ROMessage := __asyncRequest.responseMessage;
  locking self.__message do begin
    self.__message.setClientID(__localMessage.clientID);
  end;
end;

{$ENDREGION}

end.
